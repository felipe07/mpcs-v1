<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <context:annotation-config />
    <context:component-scan base-package="it.polimi.awt"/>

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="locations">
            <list>
                <value>/WEB-INF/rpc.properties</value>
                <value>/WEB-INF/configuration.properties</value>
            </list>
        </property>
    </bean>

    <bean id="executor" class="org.springframework.remoting.httpinvoker.CommonsHttpInvokerRequestExecutor">
        <!--<property name="readTimeout" value="1800000"/>-->
    </bean>

    <bean id="rpc" class="org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean" abstract="true">
        <property name="httpInvokerRequestExecutor" ref="executor"/>
    </bean>

    <bean id="jsonConverter" class="it.polimi.awt.images.converter.JSONConverter" />

    <bean id="flickrImagesService" class="it.polimi.awt.images.service.impl.FlickrImageServiceImpl" >
        <constructor-arg name="url" value="${flickr.url}" />
        <constructor-arg name="apiKey" value="${flickr.key}" />
        <constructor-arg name="secret" value="${flickr.secret}" />
        <constructor-arg name="format" value="json" />
    </bean>

    <bean id="imagesRequestManager" class="it.polimi.awt.images.jobs.ImagesRequestManager" >
        <constructor-arg name="flickrImageService" ref="flickrImagesService" />
        <constructor-arg name="jsonConverter" ref="jsonConverter" />
        <constructor-arg name="imageDao" ref="imageDao" />
    </bean>

    <bean id="imagesRPCService" parent="rpc">
        <property name="serviceUrl" value="${mpcs.rpc.commonpath}images.service"/>
        <property name="serviceInterface" value="it.polimi.awt.images.service.ImageService"/>
    </bean>

    <!-- Data source -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver" />
        <property name="url" value="jdbc:postgresql://localhost:5432/mpcs" />
        <property name="username" value="postgres" />
        <property name="password" value="nemesis" />
    </bean>

    <!-- Hibernate 3 Annotation SessionFactory Bean definition-->
    <bean id="hibernateAnnotatedSessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="annotatedClasses">
            <list>
                <value>it.polimi.awt.images.entity.Image</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL82Dialect</prop>
                <prop key="hibernate.current_session_context_class">thread</prop>
                <prop key="hibernate.show_sql">false</prop>
            </props>
        </property>
    </bean>

    <!-- DAO beans -->
    <bean id="imageDao" class="it.polimi.awt.images.dao.impl.ImageDaoImpl">
        <constructor-arg name="sessionFactory" ref="hibernateAnnotatedSessionFactory" />
    </bean>

</beans>